#user nobody;

worker_processes auto;

error_log /var/log/nginx/error.log debug;

pid /run/nginx.pid;

events {
        worker_connections 1024;
}

noise_link {
# config stream context for the proxy server
    # Frontend local TCP server for proxy to Noise Link
    server {
        error_log /var/log/nginx/errorNoiseFrontend.log debug;
        listen 2018;
        proxy_noise on;

        client_private_key_file /etc/noise/client_key_25519;

        proxy_pass backend;
    }

    # Proxy to backend TCP over Noise Link
    upstream backend  {
        server nginx-noise-backend-int.vrgl.net:2017;
    }
}

http {
    include mime.types;
    default_type application/octet-stream;

    ###For the noise socket connection keepalive setup
    proxy_http_version 1.1;
    keepalive_requests 10;
    keepalive_timeout 50s;

    # Frontend HTTP proxy to Noise Link
    upstream http_noise_proxy {
        server localhost:2018;
###For the noise socket connection keepalive setup
        keepalive 1;
###
    }

    # HTTP server
    server {
        error_log /var/log/nginx/errorHTTPFrontend.log debug;
        listen 80;
        server_name nginx-noise-lb.vrgl.net;

        location / {
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            proxy_pass http://http_noise_proxy;
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
###For the noise socket connection keepalive setup
            proxy_set_header Connection keep-alive;
###
           }
    }
}
