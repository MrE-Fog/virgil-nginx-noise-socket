
#user nobody;

worker_processes auto;

error_log /var/log/nginx/error.log debug;

pid logs/nginx.pid;

events {
        worker_connections 1024;
}

noise_socket {

# config stream context for the proxy server
#

    # Frontend local TCP server for proxy to Noise Socket
    server {
        error_log /var/log/nginx/errorNoiseFrontend.log debug;
        listen 2018;
        proxy_noise on;

        client_private_key_file /etc/noise/client_key_25519;

        proxy_pass backend;
    }

    # Proxy to backend TCP over Noise Socket
    upstream backend  {
        server localhost:2017;
    }

# end сonfig stream context for the proxy server
#
# config stream context for the backend server
#
    # Noise Socket backend server
    server {
        error_log /var/log/nginx/errorNoiseBackend.log debug;
        listen 2017 noise;

        server_private_key_file /etc/noise/server_key_25519;

        proxy_pass local_http;
    }

    # Backend HTTP over Noise Socket
    upstream local_http  {
        server localhost:2019;
    }

# end config  stream context for the backend server
#
}

http {
    include mime.types;
    default_type application/octet-stream;

###For the noise socket connection keepalive setup
    proxy_http_version 1.1;
    keepalive_requests 10;
    keepalive_timeout 50s;
###
# config HTTP context for the frontend proxy server
#

    # Frontend HTTP proxy to Noise Socket
    upstream http_noise_proxy {
        server localhost:2018;
###For the noise socket connection keepalive setup
        keepalive 1;
###
    }

    # HTTPS server
    server {
        error_log /var/log/nginx/errorHTTPFrontend.log debug;
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/nginx-selfsigned.key;

        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout 5m;

        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            proxy_pass http://http_noise_proxy;
            proxy_set_header        Host            $host;
            proxy_set_header        X-Real-IP       $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
###For the noise socket connection keepalive setup
            proxy_set_header Connection keep-alive;
###
           }
    }

# end сonfig HTTP context for the frontend proxy server
#
# config http context for the backend server
#
    # Backend HTTP over Noise Socket
    server {
        error_log /var/log/nginx/errorHTTPBackend.log debug;
        listen 2019;
        server_name localhost;

        location / {
            root html;
            index index.html index.htm;
        }
    }

# end config http context for the backend server
#
}
